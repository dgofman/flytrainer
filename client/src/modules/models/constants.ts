import { ValidatorFn, AbstractControlOptions } from '@angular/forms';

export type SHOW_COLUMNS = 'never' | true | false;
export type FORMAT_COLUMNS = 'datetime' | 'short' | 'date' | 'bool';
export type TYPE_COLUMNS = 'hide' | 'text' | 'check' | 'cal' | 'radio' | 'input' | 'password' | 'disable' | 'popup' | 'auto' | 'switch' | 'mask' | 'number' | 'phone';

export const RouterOutlet = {
    name: 'view',  // src/app/app.component.ts = <router-outlet name="view"></router-outlet>
    useHash: true, // issue on refresh page in the children level, plus '**' cannot catch invalid path
    useChildOutlet: false,
    defineLink: (path: string, component: any) => {
        return RouterOutlet.useChildOutlet ? { path, component, outlet: RouterOutlet.name } : { path, component };
    },
    createLink: (parent: string, path: string) => {
        return RouterOutlet.useChildOutlet ? [parent, { outlets: { [RouterOutlet.name]: path } }] : [parent, path];
    }
};

export interface ColumnType {
    field: string;
    header?: string;
    width?: number;
    align?: string;
    validators?: ValidatorFn | ValidatorFn[] | AbstractControlOptions;
    format?: FORMAT_COLUMNS;
    show?: SHOW_COLUMNS;
    type?: TYPE_COLUMNS;
    class?: string;
    value?: any;
    template?: string;
    placeholder?: string;
    path?: string[];
    maxlen?: number;
}

export interface Session {
    correlationId: number;
    token: string;
    id: number;
    firstname: string;
    lastname: string;
    role: Role;
}

export enum Role {
    USER = 'USER',
    ASSISTANT = 'ASSISTANT',
    MANAGER = 'MANAGER',
    ADMIN = 'ADMIN'
}

export enum AddressType {
    Home = 'Home',
    Business = 'Business',
    Billing = 'Billing',
    Shipping = 'Shipping',
    Contact = 'Contact',
    Hangar = 'Hangar',
    Shelter = 'Shelter',
    Tiedown = 'Tiedown',
    Mailing = 'Mailing',
    Physycal = 'Physycal',
    Electronic = 'Electronic',
    Other = 'Other'
}

export enum AccountType {
    Student = 'Student',
    Renter = 'Renter',
    Instructor = 'Instructor',
    Mechanic = 'Mechanic',
    Inspector = 'Inspector',
    Employee = 'Employee',
    Corporate = 'Corporate',
    Station = 'Station',
    Other = 'Other'
}

export enum TierType {
    Hourly = 'Hourly',
    Flight = 'Flight',
    Fuel = 'Fuel',
    Shopping = 'Shopping',
    Training = 'Training',
    Other = 'Other'
}

export const DocumentType = {
    Passport: 'Passport',
    DriverLicense: 'Driver License',
    AlienResident: 'Alien Resident',
    Visa: 'Visa',
    PilotCertificate: 'Pilot Certificate',
    Endorsement: 'Endorsement',
    MedicalCertificate: 'Medical Certificate',
    BirthCertificate: 'Birth Certificate',
    TSATrainingCertificate: 'TSA Awareness Training Certificate',
    TSAFormI20: 'TSA Form I-20',
    TSAPaymentReceived: 'TSA Payment Received',
    RentersInsuranceAgreement: 'Renters Insurance Agreement',
    Finance: 'Finance',
    PrivatePilotPermission: 'Private Pilot Permission',
    InstrumentRatingPermission: 'Instrument Rating Permission',
    MultiCommercialPermission: 'Multi/Commercial Permission',
    TrainingRequest: 'Training Request',
    AircraftCheckoutRecord: 'Aircraft Checkout Record',
    PilotPicture: 'Pilot Picture',
    AddressProof: 'Address Proof of Residence',
    OnlineDocument: 'Online Document',
    Other: 'Other'
};

export const CertificateType = {
    StudentPilot: 'Student Pilot',
    SportPilot: 'Sport Pilot',
    RecreationalPilot: 'Recreational Pilot',
    RemotePilot: 'Remote Pilot',
    PrivatePilot: 'Private Pilot',
    CommercialPilot: 'Commercial Pilot',
    AirlineTransportPilot: 'Airline Transport Pilot',
    MultiCrewPilot: 'Multi Crew Pilot',
    InstrumentRating: 'Instrument Rating',
    MultiEngineRating: 'Multi-Engine Rating',
    FlightInstructor: 'Flight Instructor',
    GoldSealInstructor: 'Gold Seal Instructor',
    BasicGroundInstructor: 'Basic Ground Instructor',
    AdvancedGroundInstructor: 'Advanced Ground Instructor',
    InstrumentGroundInstructor: 'Instrument Ground Instructor',
    PilotExaminer: 'Pilot Examiner',
    Other: 'Other'
};

export const AircraftCategoryClass = {
    SingleEngineLand: 'Single Engine Land',
    SingleEngineSea: 'Single Engine Sea',
    MultiengineLand: 'Multi-Engine Land',
    MultiengineSea: 'Multi-Engine Sea',
    Rotorcraft: 'Rotorcraft',
    Helicopter: 'Helicopter',
    Gyroplane: 'Gyroplane',
    Balloon: 'Balloon',
    Airship: 'Airship',
    Glider: 'Glider',
    PoweredLift: 'Powered Lift',
    WeightShift: 'Weight Shift',
    PoweredParachute: 'Powered Parachute',
    Rocket: 'Rocket',
    Sim: 'Simulator',
    UAV: 'Unmanned Aerial Vehicle'
};

export const EndorsementType = {
    Citizenship: 'Endorsement of U.S. citizenship',
    PracticalTest: 'Prerequisites for practical test',
    KnowledgeTest: 'Review of deficiencies identified on airman knowledge test',
    PreSoloKnowledge: 'Pre-solo aeronautical knowledge',
    PreSoloFlight: 'Pre-solo flight training',
    PreSoloNight: 'Pre-solo flight training at night',
    FirstSoloFlight: 'Solo flight (first 90 calendar-day)',
    SoloFlightEeach: 'Solo flight (each additional 90 calendar-day)',
    Solo25NM: 'Solo takeoffs and landings at another airport within 25 NM',
    CrossCountryFlight: 'Solo cross-country flight',
    CrossCountryPlan: 'Solo cross-country planning',
    RepeatedSolo50NM: 'Repeated solo cross-country flights not more than 50 NM',
    SoloClassB: 'Solo flight in Class B airspace',
    SoloAirportClassB: 'Solo flight to, from, or at an airport located in Class B airspace',
    PrivateKnowledgeTest: 'Private Pilot - Aeronautical knowledge test',
    PrivatePracticalTest: 'Private Pilot - Flight proficiency/practical test',
    CommercialKnowledgeTest: 'Commercial Pilot - Aeronautical knowledge test',
    CommercialPracticalTest: 'Commercial Pilot - Flight proficiency/practical test',
    InstrumentKnowledgeTest: 'Instrument Rating - Aeronautical knowledge test',
    InstrumentPracticalTest: 'Instrument Rating - Flight proficiency/practical test',
    PreInstrumentPracticalTest: 'Prerequisites for instrument practical tests',
    WINGS: 'Completion of any phase of a Pilot Proficiency Program (WINGS)',
    FlightReview: 'Completion of a flight review',
    InstrumentProficiency: 'Completion of an instrument proficiency check',
    Complex: 'To act as pilot in command in a complex airplane',
    HighPerformance: 'To act as pilot in command in a high-performance airplane',
    Pressurized: 'To act as pilot in command in a pressurized aircraft',
    TailWheel: 'To act as pilot in command in a tailwheel airplane',
    Sport: 'Sport Pilot',
    Recreational: 'Recreational Pilot',
    Instructor: 'Flight Instructor',
    ATP: 'Airline Transport Pilot (ATP)',
    Helicopter: 'To act as pilot in command in a Helicopter',
    Glider: 'Glider Pilot',
    GliderAeroTow: 'Glider Aero-Tow',
    GliderGroundTow: 'Glider Ground-Tow',
    GliderSelfLaunch: 'Glider Self-Launch',
    TowPilotGlider: 'Tow-Pilot Glider',
    SpinTraining: 'Spin Training',
    HomeStudy: 'Home Study',
    NVG: 'Night Vision Goggles (NVG) operations',
    EFVS: 'Enhanced Flight Vision System (EFVS)',
    Other: 'Other'
};

export enum Country {
    AF = 'Afghanistan',
    AX = 'AlandIslands',
    AL = 'Albania',
    DZ = 'Algeria',
    AS = 'American Samoa',
    AD = 'Andorra',
    AO = 'Angola',
    AI = 'Anguilla',
    AQ = 'Antarctica',
    AG = 'Antigua and Barbuda',
    AR = 'Argentina',
    AM = 'Armenia',
    AW = 'Aruba',
    AU = 'Australia',
    AT = 'Austria',
    AZ = 'Azerbaijan',
    BS = 'Bahamas',
    BH = 'Bahrain',
    BD = 'Bangladesh',
    BB = 'Barbados',
    BY = 'Belarus',
    BE = 'Belgium',
    BZ = 'Belize',
    BJ = 'Benin',
    BM = 'Bermuda',
    BT = 'Bhutan',
    BO = 'Bolivia',
    BA = 'Bosnia and Herzegovina',
    BW = 'Botswana',
    BV = 'Bouvet Island',
    BR = 'Brazil',
    IO = 'British Indian Ocean Territory',
    BN = 'Brunei Darussalam',
    BG = 'Bulgaria',
    BF = 'Burkina Faso',
    BI = 'Burundi',
    KH = 'Cambodia',
    CM = 'Cameroon',
    CA = 'Canada',
    CV = 'Cape Verde',
    KY = 'Cayman Islands',
    CF = 'Central African Republic',
    TD = 'Chad',
    CL = 'Chile',
    CN = 'China',
    CX = 'Christmas Island',
    CC = 'Cocos Keeling Islands',
    CO = 'Colombia',
    KM = 'Comoros',
    CG = 'Congo',
    CD = 'Congo Democratic Republic',
    CK = 'Cook Islands',
    CR = 'Costa Rica',
    CI = 'CoteDIvoire',
    HR = 'Croatia',
    CU = 'Cuba',
    CY = 'Cyprus',
    CZ = 'CzechRepublic',
    DK = 'Denmark',
    DJ = 'Djibouti',
    DM = 'Dominica',
    DO = 'Dominican Republic',
    EC = 'Ecuador',
    EG = 'Egypt',
    SV = 'El Salvador',
    GQ = 'Equatorial Guinea',
    ER = 'Eritrea',
    EE = 'Estonia',
    ET = 'Ethiopia',
    FK = 'Falkland Islands',
    FO = 'Faroe Islands',
    FJ = 'Fiji',
    FI = 'Finland',
    FR = 'France',
    GF = 'French Guiana',
    PF = 'French Polynesia',
    TF = 'French Southern Territories',
    GA = 'Gabon',
    GM = 'Gambia',
    GE = 'Georgia',
    DE = 'Germany',
    GH = 'Ghana',
    GI = 'Gibraltar',
    GR = 'Greece',
    GL = 'Greenland',
    GD = 'Grenada',
    GP = 'Guadeloupe',
    GU = 'Guam',
    GT = 'Guatemala',
    GG = 'Guernsey',
    GN = 'Guinea',
    GW = 'Guinea Bissau',
    GY = 'Guyana',
    HT = 'Haiti',
    HM = 'Heard Island Mcdonald Islands',
    VA = 'Holy See Vatican City State',
    HN = 'Honduras',
    HK = 'HongKong',
    HU = 'Hungary',
    IS = 'Iceland',
    IN = 'India',
    ID = 'Indonesia',
    IR = 'Iran',
    IQ = 'Iraq',
    IE = 'Ireland',
    IM = 'Isle Of Man',
    IL = 'Israel',
    IT = 'Italy',
    JM = 'Jamaica',
    JP = 'Japan',
    JE = 'Jersey',
    JO = 'Jordan',
    KZ = 'Kazakhstan',
    KE = 'Kenya',
    KI = 'Kiribati',
    KR = 'Korea, Republic of',
    KP = 'Korea, Democratic People\'s Republic of',
    KW = 'Kuwait',
    KG = 'Kyrgyzstan',
    LA = 'Lao Peoples Democratic Republic',
    LV = 'Latvia',
    LB = 'Lebanon',
    LS = 'Lesotho',
    LR = 'Liberia',
    LY = 'Libyan Arab Jamahiriya',
    LI = 'Liechtenstein',
    LT = 'Lithuania',
    LU = 'Luxembourg',
    MO = 'Macao',
    MKD = 'Republic of North Macedonia',
    MG = 'Madagascar',
    MW = 'Malawi',
    MY = 'Malaysia',
    MV = 'Maldives',
    ML = 'Mali',
    MT = 'Malta',
    MH = 'Marshall Islands',
    MQ = 'Martinique',
    MR = 'Mauritania',
    MU = 'Mauritius',
    YT = 'Mayotte',
    MX = 'Mexico',
    FM = 'Micronesia',
    MD = 'Moldova',
    MC = 'Monaco',
    MN = 'Mongolia',
    ME = 'Montenegro',
    MS = 'Montserrat',
    MA = 'Morocco',
    MZ = 'Mozambique',
    MM = 'Myanmar',
    NA = 'Namibia',
    NR = 'Nauru',
    NP = 'Nepal',
    NL = 'Netherlands',
    NC = 'New Caledonia',
    NZ = 'New Zealand',
    NI = 'Nicaragua',
    NE = 'Niger',
    NG = 'Nigeria',
    NU = 'Niue',
    NF = 'Norfolk Island',
    MP = 'Northern Mariana Islands',
    NO = 'Norway',
    OM = 'Oman',
    PK = 'Pakistan',
    PW = 'Palau',
    PS = 'Palestinian Territory',
    PA = 'Panama',
    PG = 'Papua New Guinea',
    PY = 'Paraguay',
    PE = 'Peru',
    PH = 'Philippines',
    PN = 'Pitcairn',
    PL = 'Poland',
    PT = 'Portugal',
    PR = 'Puerto Rico',
    QA = 'Qatar',
    RE = 'Reunion',
    RO = 'Romania',
    RU = 'Russian Federation',
    RW = 'Rwanda',
    BL = 'Saint Barthelemy',
    SH = 'Saint Helena',
    KN = 'Saint Kitts And Nevis',
    LC = 'Saint Lucia',
    MF = 'Saint Martin',
    PM = 'Saint Pierre And Miquelon',
    VC = 'Saint Vincent And Grenadines',
    WS = 'Samoa',
    SM = 'San Marino',
    ST = 'Sao Tome And Principe',
    SA = 'Saudi Arabia',
    SN = 'Senegal',
    RS = 'Serbia',
    SC = 'Seychelles',
    SL = 'Sierra Leone',
    SG = 'Singapore',
    SK = 'Slovakia',
    SI = 'Slovenia',
    SB = 'Solomon Islands',
    SO = 'Somalia',
    ZA = 'South Africa',
    GS = 'South Georgia And Sandwich Island',
    ES = 'Spain',
    LK = 'Sri Lanka',
    SD = 'Sudan',
    SS = 'South Sudan',
    SR = 'Suriname',
    SJ = 'Svalbard And Jan Mayen',
    SZ = 'Swaziland',
    SE = 'Sweden',
    CH = 'Switzerland',
    SX = 'Sint Maarten (Dutch part)',
    SY = 'Syrian Arab Republic',
    TW = 'Taiwan',
    TJ = 'Tajikistan',
    TZ = 'Tanzania',
    TH = 'Thailand',
    TL = 'TimorLeste',
    TG = 'Togo',
    TK = 'Tokelau',
    TO = 'Tonga',
    TT = 'Trinidad And Tobago',
    TN = 'Tunisia',
    TR = 'Turkey',
    TM = 'Turkmenistan',
    TC = 'Turks And Caicos Islands',
    TV = 'Tuvalu',
    UG = 'Uganda',
    UA = 'Ukraine',
    AE = 'United Arab Emirates',
    GB = 'United Kingdom',
    US = 'United States',
    UM = 'United States Outlying Islands',
    UY = 'Uruguay',
    UZ = 'Uzbekistan',
    VU = 'Vanuatu',
    VE = 'Venezuela',
    VN = 'Vietnam',
    VG = 'Virgin Islands British',
    VI = 'Virgin Islands US',
    WF = 'Wallis And Futuna',
    EH = 'Western Sahara',
    YE = 'Yemen',
    ZM = 'Zambia',
    ZW = 'Zimbabwe'
}

export enum State {
    AK = 'Alaska',
    AL = 'Alabama',
    AR = 'Arkansas',
    AZ = 'Arizona',
    CA = 'California',
    CO = 'Colorado',
    CT = 'Connecticut',
    DE = 'Delaware',
    FL = 'Florida',
    GA = 'Georgia',
    HI = 'Hawaii',
    IA = 'Iowa',
    ID = 'Idaho',
    IL = 'Illinois',
    IN = 'Indiana',
    KS = 'Kansas',
    KY = 'Kentucky',
    LA = 'Louisiana',
    MA = 'Massachusetts',
    MD = 'Maryland',
    ME = 'Maine',
    MI = 'Michigan',
    MN = 'Minnesota',
    MO = 'Missouri',
    MS = 'Mississippi',
    MT = 'Montana',
    NC = 'NorthCarolina',
    ND = 'NorthDakota',
    NE = 'Nebraska',
    NH = 'NewHampshire',
    NJ = 'NewJersey',
    NM = 'NewMexico',
    NV = 'Nevada',
    NY = 'NewYork',
    OH = 'Ohio',
    OK = 'Oklahoma',
    OR = 'Oregon',
    PA = 'Pennsylvania',
    RI = 'RhodeIsland',
    SC = 'SouthCarolina',
    SD = 'SouthDakota',
    TN = 'Tennessee',
    TX = 'Texas',
    UT = 'Utah',
    VA = 'Virginia',
    VT = 'Vermont',
    WA = 'Washington',
    WI = 'Wisconsin',
    WV = 'WestVirginia',
    WY = 'Wyoming'
}
